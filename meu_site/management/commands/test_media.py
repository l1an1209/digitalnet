from django.core.management.base import BaseCommand
from django.conf import settings
import os

class Command(BaseCommand):
    help = 'Testa se os arquivos de m√≠dia est√£o sendo servidos corretamente'

    def handle(self, *args, **options):
        media_root = settings.MEDIA_ROOT
        media_url = settings.MEDIA_URL
        
        self.stdout.write(f"MEDIA_ROOT: {media_root}")
        self.stdout.write(f"MEDIA_URL: {media_url}")
        
        # Verificar se a pasta existe
        if os.path.exists(media_root):
            self.stdout.write(f"‚úÖ Pasta de m√≠dia existe: {media_root}")
            
            # Listar arquivos na pasta de not√≠cias
            noticias_path = os.path.join(media_root, 'noticias')
            if os.path.exists(noticias_path):
                files = os.listdir(noticias_path)
                self.stdout.write(f"üìÅ Arquivos em noticias/: {files}")
                
                for file in files:
                    if not file.startswith('.'):
                        file_path = os.path.join(noticias_path, file)
                        file_url = f"{media_url}noticias/{file}"
                        self.stdout.write(f"üîó URL do arquivo: {file_url}")
                        self.stdout.write(f"üìÑ Caminho completo: {file_path}")
                        self.stdout.write(f"‚úÖ Arquivo existe: {os.path.exists(file_path)}")
            else:
                self.stdout.write("‚ùå Pasta noticias/ n√£o existe")
        else:
            self.stdout.write(f"‚ùå Pasta de m√≠dia n√£o existe: {media_root}")
            self.stdout.write("Criando pasta de m√≠dia...")
            os.makedirs(media_root, exist_ok=True)
            os.makedirs(os.path.join(media_root, 'noticias'), exist_ok=True)
            self.stdout.write("‚úÖ Pasta de m√≠dia criada!")
